{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","turnSelecteItemsListToString","length","slice","join","selectItem","item","setState","prevState","includes","index","indexOf","splice","push","clearAllSelections","className","this","type","onClick","disabled","map","key","classNames","selectedGood","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,6BAA+B,WAC7B,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcG,MAAM,GAAI,GAAGC,KAAK,MAA1C,2BACIJ,EAAcG,OAAO,GADzB,mBAdR,EAmBEE,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,GAAIA,EAAUR,cAAcS,SAASH,GAAO,CAC1C,IAAMI,EAAQF,EAAUR,cAAcW,QAAQL,GAE9CE,EAAUR,cAAcY,OAAOF,EAAO,QAEtCF,EAAUR,cAAca,KAAKP,GAG/B,MAAO,CACLN,cAAeQ,EAAUR,mBA9BjC,EAmCEc,mBAAqB,WACnB,EAAKP,SAAS,CACZP,cAAe,MArCrB,4CAyCE,WAAU,IAAD,OACP,OACE,yBAAKe,UAAU,OACb,4BACGC,KAAKf,gCAER,4BACEgB,KAAK,SACLC,QAASF,KAAKF,mBACdK,SAA8C,IAApCH,KAAKjB,MAAMC,cAAcE,QAHrC,wBAOA,4BACGL,EAAgBuB,KAAI,SAAAd,GAAI,OACvB,wBACEe,IAAKf,EACLS,UAAWO,IAAW,cAAe,CACnCC,aAAc,EAAKxB,MAAMC,cAAcS,SAASH,MAGjDA,EACD,4BACEW,KAAK,SACLC,QAAS,WACP,EAAKb,WAAWC,KAGjB,EAAKP,MAAMC,cAAcS,SAASH,GAC/B,WACA,oBAvEpB,GAAyBkB,IAAMC,WCb/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2a9657d3.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  turnSelecteItemsListToString = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No Goods Selected';\n      case 1:\n        return `${selectedGoods[0]} is Selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and\n          ${selectedGoods.slice(-1)} are Selected`;\n    }\n  }\n\n  selectItem = (item) => {\n    this.setState((prevState) => {\n      if (prevState.selectedGoods.includes(item)) {\n        const index = prevState.selectedGoods.indexOf(item);\n\n        prevState.selectedGoods.splice(index, 1);\n      } else {\n        prevState.selectedGoods.push(item);\n      }\n\n      return {\n        selectedGoods: prevState.selectedGoods,\n      };\n    });\n  }\n\n  clearAllSelections = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.turnSelecteItemsListToString()}\n        </h1>\n        <button\n          type=\"button\"\n          onClick={this.clearAllSelections}\n          disabled={this.state.selectedGoods.length === 0}\n        >\n          Clear all Selections\n        </button>\n        <ul>\n          {goodsFromServer.map(item => (\n            <li\n              key={item}\n              className={classNames('goods__item', {\n                selectedGood: this.state.selectedGoods.includes(item),\n              })}\n            >\n              {item}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.selectItem(item);\n                }}\n              >\n                {this.state.selectedGoods.includes(item)\n                  ? 'Unselect'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}